---
  - name: Wait for SSH to come up
    wait_for: port=22 timeout=320 state=started

  - name: Add the Service Fabric APT Repo
    apt_repository: repo='deb [arch=amd64] http://apt-mo.trafficmanager.net/repos/servicefabric/ trusty main' state=present

  - name: Add the Service Fabric APT Key
    apt_key: keyserver=apt-mo.trafficmanager.net id=417A0893

  - name: Add Ubuntu Keyserver
    apt_key: keyserver=keyserver.ubuntu.com id=68576280

  - name: Add the Nodejs APT Repo
    apt_repository: repo='deb https://deb.nodesource.com/node_4.x trusty main' state=present

  - name: Add the Nodejs APT Src Repo
    apt_repository: repo='deb-src https://deb.nodesource.com/node_4.x trusty main' state=present

  - name: Update APT Cache
    apt: update_cache=yes

  - name: Set up authorized_keys for the ubuntu user
    authorized_key: user=ubuntu key="{{ item }}"
    with_file:
      - "{{ role_path }}/files/mr.pub"
      - "{{ role_path }}/files/rajeet.pub"

  # - name: Set password for default account (run the playbook with --extra-vars â€œpassword=")
  #   user: name={{ item }} password='*HelloWorld1'
  #   with_items:
  #     - ubuntu

  - name: Apply Insecure sshd_config
    copy: src="{{ role_path }}/files/sshd_config" dest=/etc/ssh/sshd_config owner=0 group=0 mode=0644
    notify:
      - restart sshd

  - meta: flush_handlers

  - name: Install Nodejs, OpenSSH Server and Client, Docker
    apt: name={{item}}
    with_items:
        - nodejs
        - openssh-server
        - openssh-client
        - docker.io

  - name: Open firewall for cluster communication
    ufw: state=enabled policy=allow

  - debconf: name='servicefabric' question='servicefabric/presenteula' value='false' vtype='select'
  - debconf: name='servicefabric' question='servicefabric/accepted-eula-v1' value='true' vtype='select'
  - debconf: name='servicefabric' question='servicefabric/accepted-all-eula' value='true' vtype='select'
  - debconf: name='servicefabricsdkcommon' question='servicefabricsdkcommon/presenteula' value='false' vtype='select'
  - debconf: name='servicefabricsdkcommon' question='servicefabricsdkcommon/accepted-eula-v1' value='true' vtype='select'
  - debconf: name='servicefabricsdkcommon' question='servicefabricsdkcommon/accepted-all-eula' value='true' vtype='select'

  - name: Install the SDKs
    apt: name={{item}}
    with_items:
        - servicefabricsdkcommon
        - servicefabricsdkcsharp
        - servicefabricsdkjava

  - name: Generate and Copy Cluster Manifest
    template: src="{{ role_path }}/templates/manifest.xml" dest=/opt/microsoft/sdk/servicefabric/common/clustersetup/nonsecure/servicefabric-scalemin.xml mode=0775

  - name: Run SDK Setup
    raw: sudo /opt/microsoft/sdk/servicefabric/common/sdkcommonsetup.sh

  - name: Run Java SDK Setup
    raw: sudo /opt/microsoft/sdk/servicefabric/java/sdkjavasetup.sh

  - name: Run dotnet SDK Setup
    raw: sudo /opt/microsoft/sdk/servicefabric/csharp/sdkcsharpsetup.sh

  - name: Run Cluster Setup
    raw: cd /opt/microsoft/sdk/servicefabric/common/clustersetup && sudo ./devclustercleanup.sh && sudo ./devclustersetup.sh
